{
    "componentChunkName": "component---src-templates-blog-post-tsx",
    "path": "/pro_2/",
    "result": {"data":{"site":{"siteMetadata":{"title":"Dev.HS"}},"markdownRemark":{"id":"0b419819-07a3-56d5-8bfa-5aa37e44858e","excerpt":"문제 주차요금계산 접근 방법 차량 번호와 출차 기록을 딕셔너리에 같이 넣음 출차기록을 파싱하여 주차 시간 계산 출차기록의 길이가 홀수인 경우 -> 11:59를 출차시간으로 계산 짝수인 경우 -> 그냥 파싱 총 주차시간을 더해서 요금 측정 코드","html":"<h1>문제</h1>\n<p><a href=\"https://school.programmers.co.kr/learn/courses/30/lessons/92341\">주차요금계산</a></p>\n<h1>접근 방법</h1>\n<ol>\n<li>\n<p>차량 번호와 출차 기록을 딕셔너리에 같이 넣음</p>\n</li>\n<li>\n<p>출차기록을 파싱하여 주차 시간 계산</p>\n<ul>\n<li>\n<p>출차기록의 길이가 홀수인 경우 -> 11:59를 출차시간으로 계산</p>\n</li>\n<li>\n<p>짝수인 경우 -> 그냥 파싱</p>\n</li>\n</ul>\n</li>\n<li>\n<p>총 주차시간을 더해서 요금 측정</p>\n</li>\n</ol>\n<h1>코드</h1>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> math <span class=\"token keyword\">import</span> ceil\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>fees<span class=\"token punctuation\">,</span> records<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\nanswer <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\ntotal_time <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\ncar_num_time_dict <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n    basic_time<span class=\"token punctuation\">,</span> basic_fee<span class=\"token punctuation\">,</span> cri_time<span class=\"token punctuation\">,</span> cri_fee <span class=\"token operator\">=</span> fees<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> fees<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> fees<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> fees<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">for</span> r <span class=\"token keyword\">in</span> records<span class=\"token punctuation\">:</span>\n        time<span class=\"token punctuation\">,</span> car_num<span class=\"token punctuation\">,</span> in_out <span class=\"token operator\">=</span> r<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token keyword\">if</span> car_num <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> car_num_time_dict<span class=\"token punctuation\">:</span>\n            car_num_time_dict<span class=\"token punctuation\">[</span>car_num<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>time<span class=\"token punctuation\">]</span>\n\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            car_num_time_dict<span class=\"token punctuation\">[</span>car_num<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">)</span>\n\n    car_num_time_dict <span class=\"token operator\">=</span> <span class=\"token builtin\">sorted</span><span class=\"token punctuation\">(</span>car_num_time_dict<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>car_num_time_dict<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">for</span> car_info<span class=\"token punctuation\">,</span> time_line <span class=\"token keyword\">in</span> car_num_time_dict<span class=\"token punctuation\">:</span>\n        total <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n        <span class=\"token comment\"># 출차한 기록이 없을 경우</span>\n        <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>time_line<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>time_line<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                start_h<span class=\"token punctuation\">,</span> start_m <span class=\"token operator\">=</span> <span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> time_line<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                end_h<span class=\"token punctuation\">,</span> end_m <span class=\"token operator\">=</span> <span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> time_line<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token comment\"># 시간 계산</span>\n                total <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span>end_h <span class=\"token operator\">*</span> <span class=\"token number\">60</span> <span class=\"token operator\">+</span> end_m<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>start_h <span class=\"token operator\">*</span> <span class=\"token number\">60</span> <span class=\"token operator\">+</span> start_m<span class=\"token punctuation\">)</span>\n\n            start_h<span class=\"token punctuation\">,</span> start_m <span class=\"token operator\">=</span> <span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> time_line<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            total <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">23</span> <span class=\"token operator\">*</span> <span class=\"token number\">60</span> <span class=\"token operator\">+</span> <span class=\"token number\">59</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>start_h <span class=\"token operator\">*</span> <span class=\"token number\">60</span> <span class=\"token operator\">+</span> start_m<span class=\"token punctuation\">)</span>\n\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>time_line<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                start_h<span class=\"token punctuation\">,</span> start_m <span class=\"token operator\">=</span> <span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> time_line<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                end_h<span class=\"token punctuation\">,</span> end_m <span class=\"token operator\">=</span> <span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> time_line<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token comment\"># 시간 계산</span>\n                total <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span>end_h <span class=\"token operator\">*</span> <span class=\"token number\">60</span> <span class=\"token operator\">+</span> end_m<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>start_h <span class=\"token operator\">*</span> <span class=\"token number\">60</span> <span class=\"token operator\">+</span> start_m<span class=\"token punctuation\">)</span>\n\n        total_time<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>total<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">for</span> time <span class=\"token keyword\">in</span> total_time<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> time <span class=\"token operator\">&lt;=</span> basic_time<span class=\"token punctuation\">:</span>\n            total_fee <span class=\"token operator\">=</span> basic_fee\n\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            total_fee <span class=\"token operator\">=</span> basic_fee <span class=\"token operator\">+</span> ceil<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>time <span class=\"token operator\">-</span> basic_time<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> cri_time<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> cri_fee\n\n        answer<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>total_fee<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> answer</code></pre></div>","frontmatter":{"title":"[프로그래머스] 주차요금계산","date":"July 19, 2022","description":"2022 KAKAO BLIND RECRUITMENT","tags":["algorithm","python","프로그래머스"]}},"previous":{"fields":{"slug":"/pro_1/"},"frontmatter":{"title":"[프로그래머스] 크레인 인형뽑기 게임"}},"next":{"fields":{"slug":"/pro_3/"},"frontmatter":{"title":"[프로그래머스] k진수에서 소수 개수 구하기"}}},"pageContext":{"id":"0b419819-07a3-56d5-8bfa-5aa37e44858e","previousPostId":"f1854836-10e0-5142-81d4-e5a4337c840e","nextPostId":"91230d70-724d-5d81-b7a4-e00f3de48bb6"}},
    "staticQueryHashes": ["2841359383"]}