{"version":3,"file":"component---src-pages-index-tsx-dddb98732829a75f3537.js","mappings":"6IAaA,IAV0B,WACtB,OACEA,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,WACXD,EAAAA,cAAAA,OAAAA,KAAAA,c,2FC0EV,UA5DkB,SAAC,GAA4C,IAAD,EAA1CE,EAA0C,EAA1CA,KAAMC,EAAoC,EAApCA,SAClBC,GAAqB,UAAAF,EAAKG,KAAKC,oBAAV,eAAwBC,QAAxB,QACrBC,EAAaN,EAAKO,kBAAkBC,MAE1C,OAAoB,IAAjBF,EAAMG,OAELX,EAAAA,cAACY,EAAAA,EAAD,CAAQT,SAAUA,EAAUI,MAAOH,GACjCJ,EAAAA,cAACa,EAAAA,EAAD,CAAKN,MAAM,cACXP,EAAAA,cAACc,EAAAA,EAAD,MACAd,EAAAA,cAAAA,IAAAA,KAAAA,8JAWJA,EAAAA,cAACY,EAAAA,EAAD,CAAQT,SAAUA,EAAUI,MAAOH,GACjCJ,EAAAA,cAACe,EAAAA,EAAD,MACAf,EAAAA,cAACa,EAAAA,EAAD,CAAKN,MAAM,cACXP,EAAAA,cAAAA,KAAAA,CAAIgB,MAAO,CAAEC,UAAU,SACpBT,EAAMU,KAAI,SAAAC,GACT,IAAMZ,EAAQY,EAAKC,YAAYb,OAASY,EAAKE,OAAOC,KAEpD,OACEtB,EAAAA,cAAAA,KAAAA,CAAIuB,IAAKJ,EAAKE,OAAOC,MACnBtB,EAAAA,cAAAA,UAAAA,CACEC,UAAU,iBACVuB,WAAS,EACTC,SAAS,6BAETzB,EAAAA,cAAAA,SAAAA,KACEA,EAAAA,cAAAA,KAAAA,KACEA,EAAAA,cAAC0B,EAAAA,KAAD,CAAMC,GAAIR,EAAKE,OAAOC,KAAMM,SAAS,OACnC5B,EAAAA,cAAAA,OAAAA,CAAM4B,SAAS,YAAYrB,KAG/BP,EAAAA,cAAAA,QAAAA,KAAQmB,EAAKC,YAAYlB,OAE3BF,EAAAA,cAAAA,UAAAA,KACEA,EAAAA,cAAAA,IAAAA,CACE6B,wBAAyB,CACvBC,OAAQX,EAAKC,YAAYW,aAAgBZ,EAAKa,SAEhDJ,SAAS,0B,uDCV7B,IA9CY,WAAO,IAAD,IACV1B,GAAO+B,EAAAA,EAAAA,gBAAe,cAiBtBC,EAAM,UAAGhC,EAAKG,KAAKC,oBAAb,aAAG,EAAwB4B,OACjCC,EAAM,UAAGjC,EAAKG,KAAKC,oBAAb,aAAG,EAAwB6B,OAEvC,OACE,uBAAKlC,UAAU,OACb,gBAAC,EAAAmC,EAAD,CACEnC,UAAU,aACVoC,OAAO,QACPC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,4BACJC,MAAO,GACPC,OAAQ,GACRC,QAAS,GACTC,IAAI,kBARN,uBAUCT,MAAAA,OAAA,EAAAA,EAAQU,OACP,uCACa,8BAASV,EAAOU,MAD7B,KAC6CV,MAAAA,OAAA,EAAAA,EAAQW,UAAW,KADhE,IAGE,qBAAGC,KAAI,yBAAyBX,MAAAA,OAAA,EAAAA,EAAQY,UAAR,KAAhC,yC","sources":["webpack://gatsby-starter-blog/./src/components/sidebar.tsx","webpack://gatsby-starter-blog/./src/pages/index.tsx","webpack://gatsby-starter-blog/./src/components/bio.js"],"sourcesContent":["import * as React from \"react\"\nimport { PageProps, Link, graphql } from \"gatsby\"\n\nconst Sidebar: React.FC = () => {\n    return(\n      <div className=\"sidebar\">\n          <span>\n              sidebar  \n          </span>\n      </div>  \n    );\n}\n\nexport default Sidebar","// If you don't want to use TypeScript you can delete this file!\nimport * as React from \"react\"\nimport { PageProps, Link, graphql, Page } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport Sidebar from \"../components/sidebar\"\n\ntype DataProps = {\n  site: {\n    siteMetadata: {\n      title: string\n    }\n  },\n  allMarkdownRemark:{\n    nodes: any\n  }\n}\n\nconst BlogIndex = ({data, location}: PageProps<DataProps>) => {\n  const sitleTitle: string = data.site.siteMetadata?.title || `Title`\n  const posts: any = data.allMarkdownRemark.nodes\n   \n  if(posts.length === 0){\n    return(\n      <Layout location={location} title={sitleTitle}>\n        <Seo title=\"All posts\" />\n        <Bio />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n  \n  \n  return(\n    <Layout location={location} title={sitleTitle}>\n      <Sidebar />\n      <Seo title=\"All posts\" />\n      <ol style={{ listStyle: `none`}}>\n        {posts.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n\n          return(\n            <li key={post.fields.slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h2>\n                    <Link to={post.fields.slug} itemProp=\"url\">\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </h2>\n                  <small>{post.frontmatter.data}</small>\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description  || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n              </article>\n            </li>\n          )\n        })}\n      </ol>\n    </Layout>\n  )\n\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n      }\n    }\n  }\n`","/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n  const social = data.site.siteMetadata?.social\n\n  return (\n    <div className=\"bio\">\n      <StaticImage\n        className=\"bio-avatar\"\n        layout=\"fixed\"\n        formats={[\"auto\", \"webp\", \"avif\"]}\n        src=\"../images/profile-pic.png\"\n        width={50}\n        height={50}\n        quality={95}\n        alt=\"Profile picture\"\n      />\n      {author?.name && (\n        <p>\n          Written by <strong>{author.name}</strong> {author?.summary || null}\n          {` `}\n          <a href={`https://twitter.com/${social?.twitter || ``}`}>\n            You should follow them on Twitter\n          </a>\n        </p>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n"],"names":["React","className","data","location","sitleTitle","site","siteMetadata","title","posts","allMarkdownRemark","nodes","length","Layout","Seo","Bio","Sidebar","style","listStyle","map","post","frontmatter","fields","slug","key","itemScope","itemType","Link","to","itemProp","dangerouslySetInnerHTML","__html","description","excerpt","useStaticQuery","author","social","S","layout","formats","src","width","height","quality","alt","name","summary","href","twitter"],"sourceRoot":""}