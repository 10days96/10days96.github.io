<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Gatsby Starter Blog RSS Feed]]></title><description><![CDATA[AI에 직관을 담고 싶은 개발자 입니다.]]></description><link>https://gatsbystarterblogsource.gatsbyjs.io</link><generator>GatsbyJS</generator><lastBuildDate>Tue, 19 Jul 2022 11:29:34 GMT</lastBuildDate><item><title><![CDATA[[프로그래머스] 주차요금계산]]></title><description><![CDATA[문제 주차요금계산 접근 방법 코드]]></description><link>https://gatsbystarterblogsource.gatsbyjs.io/programmers_car_fee/</link><guid isPermaLink="false">https://gatsbystarterblogsource.gatsbyjs.io/programmers_car_fee/</guid><pubDate>Tue, 19 Jul 2022 00:00:00 GMT</pubDate><content:encoded>&lt;h1&gt;문제&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://school.programmers.co.kr/learn/courses/30/lessons/92341&quot;&gt;주차요금계산&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;접근 방법&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;코드&lt;/h1&gt;
&lt;deckgo-highlight-code language=&quot;python&quot; terminal=&quot;carbon&quot; theme=&quot;base16-light&quot;  &gt;
          &lt;code slot=&quot;code&quot;&gt;from math import ceil

def solution(fees, records):
answer = []
total_time = []
car_num_time_dict = {}

    basic_time, basic_fee, cri_time, cri_fee = fees[0], fees[1], fees[2], fees[3]

    for r in records:
        time, car_num, in_out = r.split()

        if car_num not in car_num_time_dict:
            car_num_time_dict[car_num] = [time]

        else:
            car_num_time_dict[car_num].append(time)

    car_num_time_dict = sorted(car_num_time_dict.items())
    print(car_num_time_dict)

    for car_info, time_line in car_num_time_dict:
        total = 0
        # 출차한 기록이 없을 경우
        if len(time_line) % 2 != 0:
            for i in range(0, len(time_line) - 1, 2):
                start_h, start_m = map(int, time_line[i].split(&amp;quot;:&amp;quot;))
                end_h, end_m = map(int, time_line[i + 1].split(&amp;quot;:&amp;quot;))
                # 시간 계산
                total += (end_h * 60 + end_m) - (start_h * 60 + start_m)

            start_h, start_m = map(int, time_line[-1].split(&amp;quot;:&amp;quot;))
            total += (23 * 60 + 59) - (start_h * 60 + start_m)

        else:
            for i in range(0, len(time_line), 2):
                start_h, start_m = map(int, time_line[i].split(&amp;quot;:&amp;quot;))
                end_h, end_m = map(int, time_line[i + 1].split(&amp;quot;:&amp;quot;))
                # 시간 계산
                total += (end_h * 60 + end_m) - (start_h * 60 + start_m)

        total_time.append(total)

    for time in total_time:
        if time &amp;lt;= basic_time:
            total_fee = basic_fee

        else:
            total_fee = basic_fee + ceil((time - basic_time) / cri_time) * cri_fee

        answer.append(total_fee)
    return answer&lt;/code&gt;
        &lt;/deckgo-highlight-code&gt;</content:encoded></item><item><title><![CDATA[[프로그래머스] 크레인 인형뽑기 게임]]></title><description><![CDATA[접근 방법 열을 기준으로 순회 코드]]></description><link>https://gatsbystarterblogsource.gatsbyjs.io/programmers_64061/</link><guid isPermaLink="false">https://gatsbystarterblogsource.gatsbyjs.io/programmers_64061/</guid><pubDate>Tue, 12 Jul 2022 00:00:00 GMT</pubDate><content:encoded>&lt;h1&gt;접근 방법&lt;/h1&gt;
&lt;p&gt;열을 기준으로 순회&lt;/p&gt;
&lt;h1&gt;코드&lt;/h1&gt;
&lt;deckgo-highlight-code language=&quot;python&quot; terminal=&quot;carbon&quot; theme=&quot;base16-light&quot;  &gt;
          &lt;code slot=&quot;code&quot;&gt;def solution(board, moves):
    answer = 0
    bucket = []

    for m in moves:
        for i in range(len(board[0])):
            if board[i][m - 1] != 0:
                bucket.append(board[i][m - 1])
                board[i][m - 1] = 0
                break

        if len(bucket) &amp;gt;= 2 and bucket[-1] == bucket[-2]:
            answer += 2
            bucket.pop()
            bucket.pop()

    return answer&lt;/code&gt;
        &lt;/deckgo-highlight-code&gt;</content:encoded></item><item><title><![CDATA[[백준] 15649번 N과 M (1)]]></title><link>https://gatsbystarterblogsource.gatsbyjs.io/알고리즘/</link><guid isPermaLink="false">https://gatsbystarterblogsource.gatsbyjs.io/알고리즘/</guid><pubDate>Mon, 20 Jun 2022 00:00:00 GMT</pubDate><content:encoded>&lt;deckgo-highlight-code language=&quot;python&quot; terminal=&quot;carbon&quot; theme=&quot;base16-light&quot;  &gt;
          &lt;code slot=&quot;code&quot;&gt;import sys

N, M = map(int, sys.stdin.readline().split())

def combination(com:list):

    if len(com) == M:
        print(&amp;#39; &amp;#39;.join(map(str, com)))
        return

    for i in range(1, N + 1):
        if i in com:
            continue
        combination(com + [i])

combination([])&lt;/code&gt;
        &lt;/deckgo-highlight-code&gt;</content:encoded></item></channel></rss>